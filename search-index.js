var searchIndex = JSON.parse('{\
"mock_builder":{"doc":"<code>mock-builder</code> allows you to create <em>mock pallets</em>. A <em>mock </em>…","t":"CRFOOAFOOADNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGNENLLLLLFLLLLLLLLLLLLLFLLLLLLLMM","n":["CallId","MOCK_FN_PREFIX","execute","execute_call","execute_call_instance","location","register","register_call","register_call_instance","storage","FunctionLocation","No","TraitInfo","Whatever","Yes","__clone_box","__clone_box","append_type_signature","as_any","as_any","as_any_mut","as_any_mut","assimilate_trait_prefix","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from_mut","from_mut","from_mut","from_mut","from_ref","from_ref","from_ref","from_ref","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_mut","into_mut","into_ref","into_ref","normalize","strip_name_prefix","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unchecked_into","unchecked_into","unique_saturated_into","unique_saturated_into","vzip","vzip","CallId","CallNotFound","Error","TypeNotMatch","as_any","as_any_mut","borrow","borrow_mut","eq","execute_call","fmt","fmt","from","from_mut","from_mut","from_ref","from_ref","into","into_any","into_any_arc","into_any_rc","into_mut","into_ref","register_call","to_string","try_from","try_into","type_id","unchecked_into","unique_saturated_into","vzip","expected","found"],"q":[[0,"mock_builder"],[10,"mock_builder::location"],[77,"mock_builder::storage"],[108,"mock_builder::storage::Error"]],"d":["","Prefix that the register functions should have.","Execute a function from the function storage. This …","Execute a function from the function storage. Same as …","Execute a function from the function storage for a pallet …","Provide functions for handle fuction locations","Register a mock function into the mock function storage. …","Register a mock function into the mock function storage. …","Register a mock function into the mock function storage …","Provide functions for register/execute calls This module …","Absolute string identification of function.","Create hash with no trait info","Indicate how to perform the localtion hash See …","Create the hash with the trait info if it has trait info …","Create hash with trait info, panics if it has not.","","","Add a representation of the function input and output types","","","","","Remove the trait name from the function name and add such …","","","","","","","","","","","","","","","Returns the argument unchanged.","Creates a location for the function which created the …","Returns the argument unchanged.","","Get a mutable reference to the inner from the outer.","Get a mutable reference to the inner from the outer.","","Get a reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Generate a hash of the location","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Normalize the location, allowing to identify the function …","Remove the prefix from the function name.","","","","","","","","","","","","","","","Identify a call in the call storage","","","","","","","","","Execute a call from the call storage identified by a …","","","Returns the argument unchanged.","Get a mutable reference to the inner from the outer.","","","Get a reference to the inner from the outer.","Calls <code>U::from(self)</code>.","","","","","","Register a call into the call storage. The registered call …","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,5,0,5,5,5,3,3,5,3,5,3,3,5,3,5,3,5,3,5,3,3,3,3,3,5,3,5,3,3,5,5,3,3,5,5,3,3,3,5,3,5,3,5,3,5,3,5,3,5,3,3,3,5,3,5,3,5,3,5,3,5,3,5,3,5,3,0,16,0,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,19,19],"f":[0,0,[1],0,0,0,[[1,1]],0,0,0,0,0,0,0,0,[2],[2],[3,3],[[],4],[[],4],[[],4],[[],4],[3,3],[[]],[[]],[[]],[[]],[5,5],[3,3],[[]],[[]],[[3,3],6],[[],6],[[],6],[[],6],[[5,7],8],[[3,7],8],[[]],[1,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,5]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[10,[9]]],[[10,[4,9]]]],[[[11,[9]]],[[11,[4,9]]]],[[[11,[9]]],[[11,[4,9]]]],[[[12,[9]]],[[12,[4,9]]]],[[[12,[9]]],[[12,[4,9]]]],[[]],[[]],[[]],[[]],[3,3],[[3,13],3],[[]],[[]],[[],14],[[],14],[[],14],[[],14],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],[[],4],[[]],[[]],[[16,16],6],[17,[[14,[16]]]],[[16,7],8],[[16,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[9]]],[[10,[4,9]]]],[[[11,[9]]],[[11,[4,9]]]],[[[12,[9]]],[[12,[4,9]]]],[[]],[[]],[1,17],[[],18],[[],14],[[],14],[[],15],[[]],[[]],[[]],0,0],"c":[],"p":[[8,"Fn"],[3,"Private"],[3,"FunctionLocation"],[8,"Any"],[4,"TraitInfo"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[15,"str"],[4,"Result"],[3,"TypeId"],[4,"Error"],[6,"CallId"],[3,"String"],[13,"TypeNotMatch"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
